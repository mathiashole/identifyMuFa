## üß¨ Visualizaci√≥n interactiva

```{=html}
<style>
  .viewer-controls {
    margin-bottom: 1.5em;
    padding: 1em;
    background: #f8f9fa;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    display: flex;
    flex-wrap: wrap;
    gap: 1em;
    align-items: center;
    justify-content: center;
  }
  
  .control-group {
    display: flex;
    align-items: center;
    gap: 0.5em;
    background: white;
    padding: 0.5em 1em;
    border-radius: 6px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  }
  
  label {
    font-weight: 600;
    color: #495057;
    font-size: 0.9em;
  }
  
  select {
    padding: 0.5em 1em;
    border: 1px solid #ced4da;
    border-radius: 4px;
    background-color: white;
    font-size: 0.9em;
    transition: all 0.2s;
  }
  
  select:hover {
    border-color: #adb5bd;
  }
  
  select:focus {
    outline: none;
    border-color: #4dabf7;
    box-shadow: 0 0 0 2px rgba(77, 171, 247, 0.2);
  }
  
  button {
    padding: 0.6em 1.2em;
    border: none;
    border-radius: 4px;
    background-color: #4dabf7;
    color: white;
    font-weight: 500;
    font-size: 0.9em;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    gap: 0.5em;
  }
  
  button:hover {
    background-color: #339af0;
    transform: translateY(-1px);
  }
  
  button:active {
    transform: translateY(0);
  }
  
  #autoSpinBtn {
    background-color: #868e96;
  }
  
  #autoSpinBtn.active {
    background-color: #40c057;
  }
  
  #viewport {
    width: 100%;
    height: 600px;
    border-radius: 8px;
    border: 1px solid #dee2e6;
    box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    background: #f1f3f5;
  }
  
  @media (max-width: 768px) {
    .viewer-controls {
      flex-direction: column;
      align-items: stretch;
    }
    
    .control-group {
      flex-direction: column;
      align-items: flex-start;
    }
  }

/* Sequence */

.sequence-container {
  font-family: monospace;
  white-space: nowrap;
  padding: 10px;
  background: #f5f5f5;
  border-radius: 4px;
  margin-top: 15px;
}

.residue {
  display: inline-block;
  padding: 2px 5px;
  margin: 1px;
  border-radius: 3px;
  cursor: pointer;
  transition: all 0.2s;
}

.residue:hover {
  background-color: #4dabf7;
  color: white;
  transform: translateY(-2px);
}

.residue.highlight {
  background-color: #339af0;
  color: white;
  font-weight: bold;
}

.sequence-label {
  font-weight: bold;
  margin-bottom: 5px;
  color: #495057;
}

/* final sequence */

</style>

<div class="viewer-controls">
  <div class="control-group">
    <label for="model-select">Modelo</label>
    <select id="model-select" class="styled-select">
      <option value="structure_file/fold_2025_05_13_12_36_178_44_dominio_c_terminal_model_0.cif">Modelo 0</option>
      <option value="structure_file/fold_2025_05_13_12_36_178_44_dominio_c_terminal_model_1.cif">Modelo 1</option>
      <option value="structure_file/fold_2025_05_13_12_36_178_44_dominio_c_terminal_model_2.cif">Modelo 2</option>
      <option value="structure_file/fold_2025_05_13_12_36_178_44_dominio_c_terminal_model_3.cif">Modelo 3</option>
      <option value="structure_file/fold_2025_05_13_12_36_178_44_dominio_c_terminal_model_4.cif" selected>Modelo 4</option>
    </select>
  </div>

  <!-- <div class="control-group">
    <label for="color-select">Color</label>
    <select id="color-select" class="styled-select">
      <option value="chainid" selected>Cadenas</option>
      <option value="element">Elemento</option>
      <option value="resname">Residuo</option>
      <option value="residueindex">√çndice</option>
      <option value="uniform">Uniforme</option>
      <option value="ss">Estructura Secundaria (Helix/Sheet/Loop)</option>
      <option value="hydrophobicity">Hidrofobicidad</option>
      <option value="bfactor">B-factor (Flexibilidad)</option>
      <option value="spectrum">Random </option>
      <option value="spectrum">Espectro (Rainbow)</option>
      <option value="sstruc">Tipo de H√©lice (Œ±/Œ≤/œÄ)</option>
      <option value="modelindex">Por Modelo (NMR/Multi-model)</option>
      <option value="partialcharge">Carga Parcial</option>
    </select>
  </div> -->
  
  <!-- Check point -->
  <div class="control-group">
  <label>Visualizaci√≥n</label>
  <div class="representation-options">
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="cartoon" checked> Cartoon
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="surface"> Surface
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="ball+stick"> Ball+Stick
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="label"> Label
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="spacefill"> Spacefill
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="licorice"> Licorice
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="trace"> Trace
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="tube"> Tube
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="backbone"> Backbone
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="contact"> Contact Points
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="helixorient"> Helix Orientation
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="hyperball"> Hyperball
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="line"> Line
    </label>
    <label class="checkbox-option">
      <input type="checkbox" name="rep-option" value="point"> Points
    </label>
  </div>
</div>
<!-- Check point -->

  <div class="control-group">
    <label for="rep-select">Visualizaci√≥n</label>
    <select id="rep-select" class="styled-select">
      <option value="cartoon" selected>Cartoon</option>
      <option value="surface">Surface</option>
      <option value="ball+stick">Ball+Stick</option>
      <option value="label">Label</option>
      <option value="spacefill">Spacefill</option>
      <option value="licorice">Licorice</option>
      <option value="trace">Trace</option>
      <option value="tube">Tube</option>
      <option value="backbone">Backbone</option>
      <option value="contact">Contact Points</option>
      <option value="helixorient">Helix Orientation</option>
      <option value="hyperball">Hyperball</option>
      <option value="line">Line</option>
      <option value="point">Points</option>
    </select>
  </div>

  <button onclick="descargarImagen()">
    <span class="icon">üì∏</span> Capturar
  </button>
  
  <button onclick="pantallaCompleta()">
    <span class="icon">üñ•Ô∏è</span> Pant. completa
  </button>
  
  <button onclick="cambiarPerspectiva()">
    <span class="icon">üé•</span> Perspectiva
  </button>
  
  <button id="autoSpinBtn" onclick="toggleAutoSpin()">
    <span class="icon">üîÑ</span> Rotaci√≥n: OFF
  </button>
</div>

<div id="viewport"></div>
<!-- Sequence -->
<div id="sequence-viewer" style="margin-top: 20px; overflow-x: auto;"></div>

<!-- <style>
  .viewer-controls {
    margin-bottom: 1em;
    text-align: center;
  }
  .viewer-controls > * {
    margin: 0 1em 1em 1em;
  }
  /* Opcional: para que el contenedor de viewport tenga borde sutil */
  #viewport {
    border: 1px solid #ccc;
  }
</style>

<div class="viewer-controls">
  <label for="model-select">Modelo:</label>
  <select id="model-select">
    <option value="structure_file/fold_2025_05_13_12_36_178_44_dominio_c_terminal_model_0.cif">Modelo 0</option>
    <option value="structure_file/fold_2025_05_13_12_36_178_44_dominio_c_terminal_model_1.cif">Modelo 1</option>
    <option value="structure_file/fold_2025_05_13_12_36_178_44_dominio_c_terminal_model_2.cif">Modelo 2</option>
    <option value="structure_file/fold_2025_05_13_12_36_178_44_dominio_c_terminal_model_3.cif">Modelo 3</option>
    <option value="structure_file/fold_2025_05_13_12_36_178_44_dominio_c_terminal_model_4.cif" selected>Modelo 4</option>
  </select>

  <label for="color-select"> üé® Color:</label>
  <select id="color-select">
    <option value="chainid" selected>Cadenas</option>
    <option value="element">Elemento</option>
    <option value="resname">Nombre de residuo</option>
    <option value="residueindex">√çndice de residuo</option>
    <option value="uniform">Uniforme</option>
  </select>

  <label for="rep-select"> üß± Representaci√≥n:</label>
  <select id="rep-select">
    <option value="cartoon" selected>Cartoon</option>
    <option value="surface">Surface</option>
    <option value="ball+stick">Ball + Stick</option>
    <option value="spacefill">Spacefill</option>
    <option value="licorice">Licorice</option>
  </select>

  <button onclick="descargarImagen()">üì∏ Imagen</button>
  <button onclick="pantallaCompleta()">üñ•Ô∏è Pantalla completa</button>
  <button onclick="cambiarPerspectiva()">üé• Perspectiva</button>
  <button id="autoSpinBtn" onclick="toggleAutoSpin()">üîÑ Auto-rotaci√≥n: OFF</button>
</div>

<div id="viewport" style="width: 100%; height: 500px; border: 1px solid #ccc;"></div> -->

<script src="https://unpkg.com/ngl@2.0.0-dev.38/dist/ngl.js"></script>
<script>
  let stage = new NGL.Stage("viewport", { backgroundColor: "white" });
  let currentComponent;
  let currentPerspective = "perspective";
  let autoSpin = false;  // Estado inicial: auto rotaci√≥n apagada

  // function cargarModelo(file) {
  //   stage.removeAllComponents();
  //   stage.loadFile(file).then(function (component) {
  //     currentComponent = component;
  //     actualizarRepresentacion();
  //     stage.autoView();
  //     // Al cargar un modelo, respetamos el estado actual de autoSpin
  //     stage.setSpin(autoSpin);
  //     actualizarBotonAutoSpin();
  //   });
  // }

  function cargarModelo(file) {
  stage.removeAllComponents();
  stage.loadFile(file).then(function(component) {
    currentComponent = component;
    actualizarRepresentacion();
    stage.autoView();
    stage.setSpin(autoSpin);
    actualizarBotonAutoSpin();
    
    // Obtener y mostrar la secuencia
    mostrarSecuencia(component);
  });
}

function mostrarSecuencia(component) {
  const sequenceContainer = document.getElementById('sequence-viewer');
  sequenceContainer.innerHTML = '';
  
  // Obtener la estructura
  const structure = component.structure;
  
  // Crear contenedor principal
  const container = document.createElement('div');
  container.className = 'sequence-container';
  
  // Obtener las cadenas (chains)
  const chains = structure.getChainnames();
  
  chains.forEach(chainId => {
    // Crear secci√≥n para cada cadena
    const chainDiv = document.createElement('div');
    chainDiv.className = 'sequence-chain';
    
    // A√±adir etiqueta de la cadena
    const label = document.createElement('div');
    label.className = 'sequence-label';
    label.textContent = `Cadena ${chainId}`;
    chainDiv.appendChild(label);
    
    // Obtener residuos para esta cadena
    const residues = [];
    structure.eachResidue(function(residue) {
      if (residue.chainname === chainId) {
        residues.push(residue);
      }
    });
    
    // Mostrar secuencia
    const seqDiv = document.createElement('div');
    residues.forEach(residue => {
      const resElem = document.createElement('span');
      resElem.className = 'residue';
      resElem.textContent = residue.resname;
      resElem.title = `Residuo ${residue.resno}: ${residue.resname}`;
      
      // Resaltar al hacer hover
      resElem.addEventListener('mouseover', function() {
        // Resaltar residuo en la visualizaci√≥n 3D
        currentComponent.addRepresentation('ball+stick', {
          sele: `:${residue.resno} and .${chainId}`,
          color: 'red'
        });
        
        // Resaltar en la secuencia
        resElem.classList.add('highlight');
      });
      
      resElem.addEventListener('mouseout', function() {
        // Quitar resaltado
        currentComponent.removeRepresentation(currentComponent.reprList.length - 1);
        resElem.classList.remove('highlight');
      });
      
      seqDiv.appendChild(resElem);
    });
    
    chainDiv.appendChild(seqDiv);
    container.appendChild(chainDiv);
  });
  
  sequenceContainer.appendChild(container);
}

  function actualizarRepresentacion() {
    if (!currentComponent) return;
    currentComponent.removeAllRepresentations();
    const rep = document.getElementById("rep-select").value;
    const color = document.getElementById("color-select").value;
    currentComponent.addRepresentation(rep, { colorScheme: color });
    currentComponent.autoView();
  }

  function toggleAutoSpin() {
    autoSpin = !autoSpin;
    stage.setSpin(autoSpin);
    actualizarBotonAutoSpin();
  }

  function actualizarBotonAutoSpin() {
    const btn = document.getElementById("autoSpinBtn");
    btn.textContent = autoSpin ? "üîÑ Auto-rotaci√≥n: ON" : "üîÑ Auto-rotaci√≥n: OFF";
  }

  document.getElementById("model-select").addEventListener("change", function () {
    cargarModelo(this.value);
  });

  document.getElementById("color-select").addEventListener("change", actualizarRepresentacion);
  document.getElementById("rep-select").addEventListener("change", actualizarRepresentacion);

  function descargarImagen() {
    stage.makeImage({ factor: 2 }).then(function (blob) {
      NGL.download(blob, "estructura.png");
    });
  }

  function pantallaCompleta() {
    const elem = document.getElementById("viewport");
    if (elem.requestFullscreen) {
      elem.requestFullscreen();
    } else if (elem.webkitRequestFullscreen) {
      elem.webkitRequestFullscreen();
    } else if (elem.msRequestFullscreen) {
      elem.msRequestFullscreen();
    }
  }

  function cambiarPerspectiva() {
    currentPerspective = (currentPerspective === "perspective") ? "orthographic" : "perspective";
    stage.setParameters({ cameraType: currentPerspective });
  }

  // Cargar modelo inicial
  cargarModelo(document.getElementById("model-select").value);
</script>

```

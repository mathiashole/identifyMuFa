---
title: "Amino acid frequency"
author: "Mathias"
format:
  html:
    theme: united
    code-fold: true
    code-link: true
    number-sections: true
    highlight-style: github
---

![](https://img.itch.zone/aW1nLzE3MTEyNjE5LmdpZg==/original/2%2BYVZg.gif){style="float:right;" fig-alt="Illustration of a detective cat. Artwork by @shigemi.itch.io." width="301"}

```{css}
#| echo: false

p {
  text-align: justify
}

```

```{r}
#| label: charged global variables
#| echo: false
#| warning: false

directory <- "signalP"

# Obtener la lista de archivos que comienzan con 'out_' y terminan con '.fasta'

files <- list.files(directory, pattern = "\\AA_empty.fasta$", full.names = TRUE)

#fasta_list <- lapply(files, read.fasta)
fasta_list <- lapply(setNames(files, basename(files)), read.fasta)

```


```{r}
#| label: load packages to frequency
#| echo: true
#| warning: false

# Load necessary libraries
#library(data.table)
library(seqinr)
library(ggplot2)
library(ggfortify)
library(Rtsne)
library(tidyverse)

```

```{r}
freRel_list <- lapply(fasta_list, function(fasta) {
  sapply(fasta, function(seq) {
    round(100*table(seq) / getLength(seq), 2)
  })
})

```

```{r}
#| label: calculate_frequency
#| echo: true

# Definir un vector de nombres de aminoácidos
amino_acids <- c("A", "R", "N", "D", "C", "E", "Q", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V")

# # Calcular la frecuencia relativa de aminoácidos para cada archivo
# freRel_list <- lapply(fasta_list, function(fasta) {
#   # Aplicar la función a cada secuencia dentro del archivo FASTA
#   data <- lapply(fasta, function(seq) {
#     freq <- round(100 * table(seq) / getLength(seq), 2)  # Frecuencia relativa
#     freq_df <- as.data.frame(freq) %>% 
#       mutate(AminoAcid = rownames(.))  # Formatear a dataframe
    
#     # Reemplazar números por letras de aminoácidos
#     freq_df$AminoAcid <- amino_acids[as.numeric(freq_df$AminoAcid)]
    
#     return(freq_df)
#   })
  
#   # Combinar los resultados de todas las secuencias
#   bind_rows(data, .id = "Sequence")  # Agregar identificador de secuencia
# })

freRel_list <- lapply(names(fasta_list), function(file_name) {
  fasta <- fasta_list[[file_name]]  # Acceder a las secuencias del archivo
  data <- lapply(fasta, function(seq) {
    freq <- round(100 * table(seq) / getLength(seq), 2)  # Frecuencia relativa
    freq_df <- as.data.frame(freq) %>% 
      mutate(AminoAcid = rownames(.))  # Formatear a dataframe
    
    # Reemplazar números por letras de aminoácidos
    freq_df$AminoAcid <- amino_acids[as.numeric(freq_df$AminoAcid)]
    
    return(freq_df)
  })
  
  # Combinar los resultados de todas las secuencias
  bind_rows(data, .id = "Sequence") %>% 
    mutate(File = file_name)  # Agregar el nombre del archivo
})


# Unir todos los resultados en un solo dataframe para facilitar el gráfico
#all_frequencies <- bind_rows(freRel_list, .id = "File")
all_frequencies <- bind_rows(freRel_list)


```

```{r}
#| label: create_boxplots_per_file
#| echo: true

# Crear box plots por archivo usando facet_wrap
ggplot(all_frequencies, aes(x = AminoAcid, y = Freq, fill = AminoAcid)) +
  geom_boxplot() +
  theme_minimal() +
  labs(title = "Frecuencia de Aminoácidos por ",
       x = "Aminoácido",
       y = "Frecuencia Relativa (%)") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  facet_wrap(~ File, scales = "fixed")  # Un gráfico por archivo

```
